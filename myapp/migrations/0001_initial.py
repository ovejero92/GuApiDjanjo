# Generated by Django 5.2.3 on 2025-07-28 01:42

import django.core.validators
import django.db.models.deletion
import myapp.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(help_text='Versión amigable para URL, ej: peluquerias', max_length=100, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Categorías',
            },
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(choices=[('free', 'Gratis'), ('pro', 'Profesional'), ('prime', 'Prime')], max_length=50, unique=True)),
                ('slug', models.SlugField(help_text="Se usa en las URLs. Ej: 'pro'", unique=True)),
                ('precio_mensual', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('mp_plan_id', models.CharField(blank=True, help_text='El ID del Plan de Suscripción creado en Mercado Pago', max_length=100, null=True)),
                ('allow_customization', models.BooleanField(default=False, help_text='Permite personalizar colores y banner.')),
                ('allow_metrics', models.BooleanField(default=False, help_text='Permite acceder al dashboard de métricas.')),
            ],
        ),
        migrations.CreateModel(
            name='Servicio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('descripcion', models.TextField(default='Sin descripción')),
                ('direccion', models.CharField(default='Sin dirección', max_length=200)),
                ('color_primario', models.CharField(default='#007bff', help_text='Color principal', max_length=7)),
                ('color_fondo', models.CharField(default='#333333', help_text='Color de fondo', max_length=7)),
                ('imagen_banner', models.ImageField(blank=True, help_text='Banner (máx 2MB)', null=True, upload_to='banners/', validators=[myapp.models.validar_tamaño_maximo_img])),
                ('footer_personalizado', models.TextField(blank=True, help_text='Texto o HTML simple para el footer')),
                ('configuracion_inicial_completa', models.BooleanField(default=False)),
                ('esta_activo', models.BooleanField(default=True, help_text='Indica si el propietario tiene el pago al día y el servicio está habilitado.')),
                ('fuente_titulos', models.CharField(choices=[('Roboto, sans-serif', 'Simple y Moderna (Roboto)'), ('Open Sans, sans-serif', 'Clara y Amigable (Open Sans)'), ('Lato, sans-serif', 'Elegante y Profesional (Lato)'), ('Playfair Display, serif', 'Clásica y Sofisticada (Playfair Display)'), ('Montserrat, sans-serif', 'Audaz y Geométrica (Montserrat)')], default='Montserrat, sans-serif', help_text='Elige la fuente para los títulos principales.', max_length=100)),
                ('fuente_cuerpo', models.CharField(choices=[('Roboto, sans-serif', 'Simple y Moderna (Roboto)'), ('Open Sans, sans-serif', 'Clara y Amigable (Open Sans)'), ('Lato, sans-serif', 'Elegante y Profesional (Lato)'), ('Playfair Display, serif', 'Clásica y Sofisticada (Playfair Display)'), ('Montserrat, sans-serif', 'Audaz y Geométrica (Montserrat)')], default='Roboto, sans-serif', help_text='Elige la fuente para el texto general.', max_length=100)),
                ('color_texto', models.CharField(default='#FFFFFF', help_text='Color para el texto principal. Elige un color oscuro si usas un fondo claro.', max_length=7)),
                ('slug', models.SlugField(blank=True, help_text='Generado automáticamente a partir del nombre para la URL.', max_length=120, null=True, unique=True)),
                ('footer_direccion', models.CharField(blank=True, help_text='Ej: Av. Siempreviva 742, Springfield', max_length=255, null=True)),
                ('footer_telefono', models.CharField(blank=True, help_text='Ej: +54 9 11 1234-5678', max_length=20, null=True)),
                ('footer_email', models.EmailField(blank=True, help_text='El email de contacto de tu negocio.', max_length=255, null=True)),
                ('footer_instagram_url', models.URLField(blank=True, help_text='Pega aquí la URL completa de tu perfil de Instagram.', max_length=255, null=True)),
                ('footer_facebook_url', models.URLField(blank=True, help_text='Pega aquí la URL completa de tu página de Facebook.', max_length=255, null=True)),
                ('footer_tiktok_url', models.URLField(blank=True, help_text='Pega aquí la URL completa de tu perfil de TikTok.', max_length=255, null=True)),
                ('categoria', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='servicios', to='myapp.categoria')),
                ('favoritos', models.ManyToManyField(blank=True, related_name='servicios_favoritos', to=settings.AUTH_USER_MODEL)),
                ('propietario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='servicios_propios', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DiaNoDisponible',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField(help_text='Día completo que no estará disponible.')),
                ('hora_inicio', models.TimeField(blank=True, null=True)),
                ('hora_fin', models.TimeField(blank=True, null=True)),
                ('motivo', models.CharField(blank=True, help_text='Ej: Vacaciones, Feriado, Cita médica', max_length=255)),
                ('servicio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dias_no_disponibles', to='myapp.servicio')),
            ],
        ),
        migrations.CreateModel(
            name='SubServicio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('descripcion', models.TextField(blank=True)),
                ('duracion', models.PositiveIntegerField(help_text='Duración en minutos')),
                ('precio', models.DecimalField(decimal_places=2, max_digits=10)),
                ('servicio_padre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sub_servicios', to='myapp.servicio')),
            ],
        ),
        migrations.CreateModel(
            name='Suscripcion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=False)),
                ('mp_subscription_id', models.CharField(blank=True, max_length=100, null=True)),
                ('fecha_fin', models.DateTimeField(blank=True, null=True)),
                ('plan', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='suscripciones', to='myapp.plan')),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='suscripcion', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Turno',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField()),
                ('hora', models.TimeField()),
                ('duracion_total', models.PositiveIntegerField(default=30, help_text='Duración total calculada en minutos')),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('confirmado', 'Confirmado'), ('cancelado', 'Cancelado'), ('completado', 'Completado')], default='pendiente', max_length=20)),
                ('ingreso_real', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('visto_por_cliente', models.BooleanField(default=False)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='turnos_solicitados', to=settings.AUTH_USER_MODEL)),
                ('servicio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='turnos', to='myapp.servicio')),
                ('sub_servicios_solicitados', models.ManyToManyField(blank=True, to='myapp.subservicio')),
            ],
            options={
                'unique_together': {('servicio', 'fecha', 'hora')},
            },
        ),
        migrations.CreateModel(
            name='HorarioLaboral',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dia_semana', models.IntegerField(choices=[(0, 'Lunes'), (1, 'Martes'), (2, 'Miércoles'), (3, 'Jueves'), (4, 'Viernes'), (5, 'Sábado'), (6, 'Domingo')])),
                ('horario_apertura', models.TimeField()),
                ('horario_cierre', models.TimeField()),
                ('activo', models.BooleanField(default=True, help_text='Marcar si el servicio está abierto este día')),
                ('servicio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='horarios', to='myapp.servicio')),
            ],
            options={
                'ordering': ['dia_semana'],
                'unique_together': {('servicio', 'dia_semana')},
            },
        ),
        migrations.CreateModel(
            name='Reseña',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calificacion', models.IntegerField(help_text='Calificación de 1 a 5 estrellas', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comentario', models.TextField(blank=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reseñas_hechas', to=settings.AUTH_USER_MODEL)),
                ('servicio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reseñas', to='myapp.servicio')),
                ('turno', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='reseña', to='myapp.turno')),
            ],
            options={
                'ordering': ['-fecha_creacion'],
                'unique_together': {('turno', 'usuario')},
            },
        ),
    ]
